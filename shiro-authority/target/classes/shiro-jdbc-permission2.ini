
#采用JdbcRealm 调用
jdbcRealm=org.apache.shiro.realm.jdbc.JdbcRealm



#数据源采用DruidDataSource
dataSource=com.alibaba.druid.pool.DruidDataSource

#oracle 数据源基本配置
dataSource.driverClassName=oracle.jdbc.driver.OracleDriver
dataSource.url=jdbc:oracle:thin:@127.0.0.1:1521:orcl
dataSource.username=my_test
dataSource.password=my_test

#设置域 用的数据源
jdbcRealm.dataSource=$dataSource

#设置管理的域
securityManager.realms=$jdbcRealm



#jdbcRealm自带的默认语句不符合自己的表，自己写语句

#JdbcRealm默认的这个属性是false,要显示设置为true,否则调用不成功
jdbcRealm.permissionsLookupEnabled = true

#查看JdbcRealm中的 身份验证、角色、权限变量，显示设置自己的语句

#身份验证，用户信息
#参考：DEFAULT_AUTHENTICATION_QUERY = "select password from users where username = ?";
jdbcRealm.authenticationQuery =select user_pwd from my_users where user_name=?

#用户的角色
#参考：DEFAULT_USER_ROLES_QUERY = "select role_name from user_roles where username = ?";
jdbcRealm.userRolesQuery =select distinct r.role_name from t_shiro_roles r,t_shiro_user_role ur,my_users u where r.role_id=ur.role_id and u.user_id=ur.user_id and u.user_name=?

#用户的权限
#参考：DEFAULT_PERMISSIONS_QUERY = "select permission from roles_permissions where role_name = ?";
jdbcRealm.permissionsQuery =select distinct p.permission_name from t_shiro_permission p,t_shiro_role_permission rp,t_shiro_roles r where p.permission_id=rp.permission_id and rp.role_id=r.role_id and r.role_name=?